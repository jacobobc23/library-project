package view.admin;

import controllers.BookManagementController;
import exceptions.BookIsLoanedException;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Book;
import model.Genre;
import model.User;
import view.logIn.LogInWindow;

/**
 *
 * @author Jacobo-bc
 */
public class BooksWindow extends javax.swing.JFrame {

    private final User admin;
    private final BookManagementController controller;

    private TableRowSorter<DefaultTableModel> sorter;

    /**
     * Creates new form BooksWindow
     *
     * @param admin
     */
    public BooksWindow(User admin) {
        initComponents();
        this.admin = admin;
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setTitle("Gestión de libros");
        setResizable(false);
        lblAdminName.setText(admin.getFullName());
        controller = new BookManagementController();
        fillTable();
        setCbxGenre();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        menuBarPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblAdminName = new javax.swing.JLabel();
        lblAdminAccount = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();
        btnUsersManagement = new javax.swing.JButton();
        btnLoans = new javax.swing.JButton();
        lblBooks = new javax.swing.JLabel();
        booksPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        booksTable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        txtFilter = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbxGenre = new javax.swing.JComboBox<>();
        lblGenresManagement = new javax.swing.JLabel();
        btnDeleteBook = new javax.swing.JButton();
        btnAddBook = new javax.swing.JButton();
        btnUpdateBook = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        backgroundPanel.setBackground(new java.awt.Color(255, 255, 255));

        menuBarPanel.setBackground(new java.awt.Color(0, 123, 255));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/administrator.png"))); // NOI18N
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblAdminName.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        lblAdminName.setForeground(new java.awt.Color(255, 255, 255));
        lblAdminName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAdminName.setText("jLabel2");
        lblAdminName.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblAdminAccount.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblAdminAccount.setForeground(new java.awt.Color(255, 255, 255));
        lblAdminAccount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAdminAccount.setText("Gestionar mi cuenta");
        lblAdminAccount.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAdminAccount.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblAdminAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAdminAccountMouseClicked(evt);
            }
        });

        btnExit.setBackground(new java.awt.Color(255, 0, 0));
        btnExit.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnExit.setForeground(new java.awt.Color(255, 255, 255));
        btnExit.setText("SALIR");
        btnExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnUsersManagement.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnUsersManagement.setForeground(new java.awt.Color(255, 255, 255));
        btnUsersManagement.setText("    USUARIOS");
        btnUsersManagement.setBorderPainted(false);
        btnUsersManagement.setContentAreaFilled(false);
        btnUsersManagement.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUsersManagement.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnUsersManagement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsersManagementActionPerformed(evt);
            }
        });

        btnLoans.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnLoans.setForeground(new java.awt.Color(255, 255, 255));
        btnLoans.setText("    PRÉSTAMOS");
        btnLoans.setBorderPainted(false);
        btnLoans.setContentAreaFilled(false);
        btnLoans.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLoans.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnLoans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoansActionPerformed(evt);
            }
        });

        lblBooks.setBackground(new java.awt.Color(135, 178, 255));
        lblBooks.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblBooks.setForeground(new java.awt.Color(255, 255, 255));
        lblBooks.setText("        LIBROS");
        lblBooks.setOpaque(true);

        javax.swing.GroupLayout menuBarPanelLayout = new javax.swing.GroupLayout(menuBarPanel);
        menuBarPanel.setLayout(menuBarPanelLayout);
        menuBarPanelLayout.setHorizontalGroup(
            menuBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblAdminName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnUsersManagement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnLoans, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(menuBarPanelLayout.createSequentialGroup()
                .addGroup(menuBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(menuBarPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblAdminAccount, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE))
                    .addGroup(menuBarPanelLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(lblBooks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        menuBarPanelLayout.setVerticalGroup(
            menuBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuBarPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblAdminName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAdminAccount)
                .addGap(88, 88, 88)
                .addComponent(lblBooks, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUsersManagement)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLoans)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        booksPanel.setBackground(new java.awt.Color(255, 255, 255));

        booksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(booksTable);

        txtFilter.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtFilter.setBorder(null);
        txtFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFilterKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel2.setText("Buscar:");

        cbxGenre.setBackground(new java.awt.Color(245, 245, 245));
        cbxGenre.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cbxGenre.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cbxGenre.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxGenreItemStateChanged(evt);
            }
        });

        lblGenresManagement.setForeground(new java.awt.Color(153, 153, 153));
        lblGenresManagement.setText("Gestionar");
        lblGenresManagement.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblGenresManagement.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblGenresManagementMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout booksPanelLayout = new javax.swing.GroupLayout(booksPanel);
        booksPanel.setLayout(booksPanelLayout);
        booksPanelLayout.setHorizontalGroup(
            booksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(booksPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(booksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 763, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(booksPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(31, 31, 31)
                        .addGroup(booksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFilter)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(booksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGenresManagement))))
                .addContainerGap(184, Short.MAX_VALUE))
        );
        booksPanelLayout.setVerticalGroup(
            booksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(booksPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(booksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(booksPanelLayout.createSequentialGroup()
                        .addGroup(booksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(booksPanelLayout.createSequentialGroup()
                                .addComponent(txtFilter)
                                .addGap(3, 3, 3))
                            .addComponent(cbxGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(booksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGenresManagement))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnDeleteBook.setBackground(new java.awt.Color(220, 20, 60));
        btnDeleteBook.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnDeleteBook.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteBook.setText("Eliminar");
        btnDeleteBook.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeleteBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteBookActionPerformed(evt);
            }
        });

        btnAddBook.setBackground(new java.awt.Color(0, 123, 255));
        btnAddBook.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnAddBook.setForeground(new java.awt.Color(255, 255, 255));
        btnAddBook.setText("Nuevo");
        btnAddBook.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddBookActionPerformed(evt);
            }
        });

        btnUpdateBook.setBackground(new java.awt.Color(255, 215, 0));
        btnUpdateBook.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnUpdateBook.setText("Editar");
        btnUpdateBook.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdateBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout backgroundPanelLayout = new javax.swing.GroupLayout(backgroundPanel);
        backgroundPanel.setLayout(backgroundPanelLayout);
        backgroundPanelLayout.setHorizontalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addComponent(menuBarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addComponent(booksPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(235, 235, 235))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnAddBook)
                        .addGap(65, 65, 65)
                        .addComponent(btnUpdateBook, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(btnDeleteBook, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        backgroundPanelLayout.setVerticalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuBarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(booksPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddBook)
                    .addComponent(btnUpdateBook)
                    .addComponent(btnDeleteBook))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddBookActionPerformed
        new BookRegistryWindow(this).setVisible(true);
    }//GEN-LAST:event_btnAddBookActionPerformed

    private void btnUpdateBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateBookActionPerformed
        int selected = booksTable.getSelectedRow();

        if (selected >= 0) {

            String isbn = booksTable.getModel().getValueAt(selected, 0).toString();
            Object book = controller.selectBook(isbn);

            if (book != null) {
                new BookEdtingWindow((Book) book, this).setVisible(true);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un libro de la tabla");
        }
    }//GEN-LAST:event_btnUpdateBookActionPerformed

    private void btnDeleteBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteBookActionPerformed
        int selected = booksTable.getSelectedRow();

        if (selected >= 0) {

            String isbn = booksTable.getModel().getValueAt(selected, 0).toString();

            int answer = JOptionPane.showConfirmDialog(null, "¿Está seguro de eliminar el libro?",
                    "Confirmación", JOptionPane.YES_NO_OPTION);

            if (answer == 0) {
                try {
                    controller.deleteBook(isbn);
                    fillTable();
                    JOptionPane.showMessageDialog(null, "Libro eliminado correctamente");
                } catch (BookIsLoanedException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un libro de la tabla");
        }
    }//GEN-LAST:event_btnDeleteBookActionPerformed

    private void lblAdminAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAdminAccountMouseClicked
        new AdminAccountWindow(admin).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lblAdminAccountMouseClicked

    private void txtFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFilterKeyReleased
        filter();
    }//GEN-LAST:event_txtFilterKeyReleased

    private void btnUsersManagementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsersManagementActionPerformed
        new UsersWindow(admin).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnUsersManagementActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        new LogInWindow().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnLoansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoansActionPerformed
        new LoansWindow(admin).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnLoansActionPerformed

    private void cbxGenreItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxGenreItemStateChanged
        if (cbxGenre.getSelectedIndex() != 0) {
            int genreId = cbxGenre.getSelectedIndex();

            DefaultTableModel model = new DefaultTableModel();

            model.setColumnIdentifiers(new Object[]{
                "ISBN", "Título", "Autor", "Género", "Año de publicación", "Número de copias"
            });

            booksTable.setModel(model);
            ArrayList<Book> books = controller.listBooksByGenre(genreId);

            if (!books.isEmpty()) {
                for (Book book : books) {
                    model.addRow(new Object[]{
                        book.getIsbn(),
                        book.getTitle(),
                        book.getAuthor(),
                        book.getGenre().getName(),
                        book.getPublicationYear(),
                        book.getCopiesNumber()
                    });
                }
            } else {

                cleanTable();
            }

        } else {
            fillTable();
        }
    }//GEN-LAST:event_cbxGenreItemStateChanged

    private void lblGenresManagementMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblGenresManagementMouseClicked
        new GenreCrudWindow(this).setVisible(true);
    }//GEN-LAST:event_lblGenresManagementMouseClicked

    public final void fillTable() {
        DefaultTableModel model = new DefaultTableModel();

        ArrayList<Object> books = controller.listBooks();
        model.setColumnIdentifiers(new Object[]{
            "ISBN", "Título", "Autor", "Género", "Año de publicación", "Número de copias"
        });

        booksTable.setModel(model);
        booksTable.setAutoCreateRowSorter(true);
        sorter = new TableRowSorter<>(model);
        booksTable.setRowSorter(sorter);

        for (int i = 0; i < books.size(); i++) {
            if (books.get(i) instanceof Book) {
                Book book = (Book) books.get(i);
                model.addRow(new Object[]{
                    book.getIsbn(),
                    book.getTitle(),
                    book.getAuthor(),
                    book.getGenre().getName(),
                    book.getPublicationYear(),
                    book.getCopiesNumber()
                });
            }
        }
    }

    private void filter() {
        String filterText = txtFilter.getText().trim();

        RowFilter<Object, Object> isbn = RowFilter.regexFilter(filterText, 0);
        RowFilter<Object, Object> title = RowFilter.regexFilter("(?i)" + filterText, 1);
        RowFilter<Object, Object> author = RowFilter.regexFilter("(?i)" + filterText, 2);
        RowFilter<Object, Object> genre = RowFilter.regexFilter("(?i)" + filterText, 3);
        RowFilter<Object, Object> publicationYear = RowFilter.regexFilter(filterText, 4);
        RowFilter<Object, Object> copiesNumber = RowFilter.regexFilter(filterText, 5);

        // Se combinan todos los filtros.
        // Una fila será visible si al menos uno de los filtros devuelve true para esa fila
        sorter.setRowFilter(RowFilter.orFilter(Arrays.asList(isbn, title, author, genre, publicationYear, copiesNumber)));

    }

    public void setCbxGenre() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        cbxGenre.setModel(model);

        ArrayList<Genre> genres = controller.listAllGenres();
        model.addElement("Seleccione un género"); // Agrega la opción predeterminada

        for (Genre genre : genres) {
            model.addElement(genre.getName()); // Agrega los nombres de las categorías al ComboBoxModel
        }
    }

    private void cleanTable() {
        DefaultTableModel model = (DefaultTableModel) booksTable.getModel();
        model.setRowCount(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JPanel booksPanel;
    private javax.swing.JTable booksTable;
    private javax.swing.JButton btnAddBook;
    private javax.swing.JButton btnDeleteBook;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnLoans;
    private javax.swing.JButton btnUpdateBook;
    private javax.swing.JButton btnUsersManagement;
    private javax.swing.JComboBox<String> cbxGenre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblAdminAccount;
    private javax.swing.JLabel lblAdminName;
    private javax.swing.JLabel lblBooks;
    private javax.swing.JLabel lblGenresManagement;
    private javax.swing.JPanel menuBarPanel;
    private javax.swing.JTextField txtFilter;
    // End of variables declaration//GEN-END:variables
}
