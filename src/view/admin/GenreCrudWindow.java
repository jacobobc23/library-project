package view.admin;

import controllers.GenreManagementController;
import exceptions.BookGenreException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Genre;

/**
 *
 * @author Jacobo-bc
 */
public class GenreCrudWindow extends javax.swing.JFrame {

    private final BooksWindow bw;
    private final GenreManagementController controller;
    private TableRowSorter<DefaultTableModel> sorter;

    /**
     * Creates new form GenreCrudWindow
     *
     * @param bw
     */
    public GenreCrudWindow(BooksWindow bw) {
        initComponents();
        this.bw = bw;
        setLocationRelativeTo(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestión géneros");
        setResizable(false);
        controller = new GenreManagementController();
        fillTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        genresTable = new javax.swing.JTable();
        btnAddGenre = new javax.swing.JButton();
        btnUpdateGenre = new javax.swing.JButton();
        btnDeleteGenre = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        txtFilter = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        genresTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(genresTable);

        btnAddGenre.setBackground(new java.awt.Color(0, 123, 255));
        btnAddGenre.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnAddGenre.setForeground(new java.awt.Color(255, 255, 255));
        btnAddGenre.setText("Nuevo");
        btnAddGenre.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddGenreActionPerformed(evt);
            }
        });

        btnUpdateGenre.setBackground(new java.awt.Color(255, 215, 0));
        btnUpdateGenre.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnUpdateGenre.setText("Editar");
        btnUpdateGenre.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdateGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateGenreActionPerformed(evt);
            }
        });

        btnDeleteGenre.setBackground(new java.awt.Color(220, 20, 60));
        btnDeleteGenre.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnDeleteGenre.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteGenre.setText("Eliminar");
        btnDeleteGenre.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeleteGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteGenreActionPerformed(evt);
            }
        });

        txtFilter.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtFilter.setBorder(null);
        txtFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFilterKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFilterKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel2.setText("Buscar:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFilter)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(btnAddGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(78, 78, 78)
                            .addComponent(btnUpdateGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDeleteGenre))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(144, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtFilter, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                        .addGap(3, 3, 3)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddGenre)
                    .addComponent(btnUpdateGenre)
                    .addComponent(btnDeleteGenre))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFilterKeyReleased
        filter();
    }//GEN-LAST:event_txtFilterKeyReleased

    private void txtFilterKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFilterKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isLetterOrDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtFilterKeyTyped

    private void btnAddGenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddGenreActionPerformed
        String name;

        do {
            name = JOptionPane.showInputDialog("Ingrese el nombre del nuevo género: ");

            if (name == null) {
                // Si el usuario hizo clic en Cancelar, sale del bucle
                return;
            }

            if (name.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Ingrese el nombre del género");
            }

        } while (name.isEmpty());

        try {
            Genre newGenre = new Genre(name);
            controller.insertGenre(newGenre);
            JOptionPane.showMessageDialog(null, "Género registrado correctamente");
            fillTable();
            bw.setCbxGenre();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ya existe un género con ese nombre");
        }
    }//GEN-LAST:event_btnAddGenreActionPerformed

    private void btnUpdateGenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateGenreActionPerformed
        int selected = genresTable.getSelectedRow();

        int id;
        String name;

        if (selected >= 0) {
            id = (int) genresTable.getModel().getValueAt(selected, 0);

            do {
                name = JOptionPane.showInputDialog("Ingrese el nuevo nombre: ");

                if (name == null) {
                    // Si el usuario hizo clic en Cancelar, sale del bucle
                    return;
                }

                if (name.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Ingrese el nombre del género");
                }

            } while (name.isEmpty());

            try {
                Genre genre = new Genre(id, name);

                controller.updateGenre(genre);
                JOptionPane.showMessageDialog(null, "Género editado correctamente");
                fillTable();
                bw.setCbxGenre();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Ya existe un género con ese nombre");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un género de la tabla");
        }
    }//GEN-LAST:event_btnUpdateGenreActionPerformed

    private void btnDeleteGenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteGenreActionPerformed
        int selected = genresTable.getSelectedRow();

        if (selected >= 0) {

            int id = (int) genresTable.getModel().getValueAt(selected, 0);

            int answer = JOptionPane.showConfirmDialog(null, "¿Está seguro de eliminar el género?",
                    "Confirmación", JOptionPane.YES_NO_OPTION);

            if (answer == 0) {
                try {
                    controller.deleteGenre(id);
                    fillTable();
                    JOptionPane.showMessageDialog(null, "Género eliminado correctamente");
                    bw.setCbxGenre();
                } catch (BookGenreException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un género de la tabla");
        }
    }//GEN-LAST:event_btnDeleteGenreActionPerformed

    private void fillTable() {
        DefaultTableModel model = new DefaultTableModel();

        ArrayList<Object> genres = controller.listAllGenres();
        model.setColumnIdentifiers(new Object[]{
            "ID", "Nombre"
        });

        genresTable.setModel(model);

        sorter = new TableRowSorter<>(model);
        genresTable.setRowSorter(sorter);

        for (int i = 0; i < genres.size(); i++) {
            Genre genre = (Genre) genres.get(i);
            model.addRow(new Object[]{
                genre.getId(),
                genre.getName()
            });
        }

    }

    private void filter() {
        String filterText = txtFilter.getText().trim();

        RowFilter<Object, Object> id = RowFilter.regexFilter(filterText.trim(), 0);
        RowFilter<Object, Object> name = RowFilter.regexFilter("(?i)" + filterText.trim(), 1);

        sorter.setRowFilter(RowFilter.orFilter(Arrays.asList(id, name)));

    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddBook;
    private javax.swing.JButton btnAddGenre;
    private javax.swing.JButton btnDeleteGenre;
    private javax.swing.JButton btnUpdateGenre;
    private javax.swing.JTable genresTable;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField txtFilter;
    // End of variables declaration//GEN-END:variables
}
